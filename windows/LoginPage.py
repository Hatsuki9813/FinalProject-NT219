# Form implementation generated from reading ui file 'LoginPage.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtCore import Qt

from PyQt6.QtWidgets import QLineEdit
from windows.main_window import Ui_MainWindow
from windows.main_window_user import Ui_UserForm
import pymysql.cursors
from datetime import datetime
db = pymysql.connect(host='192.168.240.26',
                                     user='nguoidung',
                                     password='9813',
                                     db='appdb')
class Ui_Form(object):
    
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(450, 550)
        Form.setWindowFlags(QtCore.Qt.WindowType.FramelessWindowHint, )
        Form.setAttribute(QtCore.Qt.WidgetAttribute.WA_TranslucentBackground)
        self.widget_2 = QtWidgets.QWidget(parent=Form)
        self.widget_2.setGeometry(QtCore.QRect(30, 30, 370, 480))
        self.widget_2.setStyleSheet("QPushButton #pushButton{\n"
"border-radius: 10px;\n"
"background-color:rgb(16, 24, 37);\n"
"}\n"
"\n"
"QPushButton #pushButton:hover{\n"
"background-color:#85C1E9;\n"
"}")
        self.widget_2.setObjectName("widget_2")
        self.label = QtWidgets.QLabel(parent=self.widget_2)
        self.label.setGeometry(QtCore.QRect(30, 30, 320, 420))
        self.label.setStyleSheet("border-radius: 20px;\n"
"background-color: rgb(19, 19, 29);")
        self.label.setText("")
        self.label.setObjectName("label")
        self.LoginLabel = QtWidgets.QLabel(parent=self.widget_2)
        self.LoginLabel.setGeometry(QtCore.QRect(145, 95, 81, 40))
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.LoginLabel.setFont(font)
        self.LoginLabel.setStyleSheet("color:white;")
        self.LoginLabel.setMidLineWidth(4)
        self.LoginLabel.setObjectName("LoginLabel")
        self.lineEdit = QtWidgets.QLineEdit(parent=self.widget_2)
        self.lineEdit.setGeometry(QtCore.QRect(100, 180, 181, 31))
        self.lineEdit.setStyleSheet("border-radius: 10px;")
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(parent=self.widget_2)
        self.pushButton.setGeometry(QtCore.QRect(130, 320, 120, 40))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.check_credentials)
        self.lineEdit_2 = QtWidgets.QLineEdit(parent=self.widget_2)
        self.lineEdit_2.setGeometry(QtCore.QRect(100, 250, 181, 31))
        self.lineEdit_2.setStyleSheet("border-radius: 10px;")
        self.lineEdit_2.setText("")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_2.setEchoMode(QLineEdit.EchoMode.Password)
        self.label_2 = QtWidgets.QLabel(parent=self.widget_2)
        self.label_2.setGeometry(QtCore.QRect(85, 380, 211, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color:white")
        self.label_2.setObjectName("label_2")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.LoginLabel.setText(_translate("Form", "Log in"))
        self.pushButton.setText(_translate("Form", "Login"))
        self.label_2.setText(_translate("Form", "Don\'t have an account? Register now"))
       # self.label_2.setTextInteractionFlags(Qt.WindowType.)
        #self.label_2.setText('<a href="https://www.example.com">Click me!</a>')
        #self.label_2.linkActivated.connect(self.open_link)

    def LoginButtonClickedAdmin(self):
        self.main_window = QtWidgets.QMainWindow()
        self.ui_main_window = Ui_MainWindow()
        self.ui_main_window.setupUi(self.main_window)
        self.main_window.show()
    def LoginButtonClickedUser(self):
        #self.app = QtWidgets.QApplication(sys.argv)
        self.user_window = QtWidgets.QWidget()
        self.ui = Ui_UserForm()
        self.ui.setupUi(self.user_window)
        self.user_window.show()
    def open_link():
        pass
    def log_login_attempt(self, username, success, job=None, message=None):
    # Khởi tạo con trỏ cơ sở dữ liệu
        cursor = db.cursor()
    
    # Truy vấn SQL để chèn log vào bảng login_logs
        query = """
        INSERT INTO login_logs (username, login_time, success, job, message)
        VALUES (%s, %s, %s, %s, %s)
        """
        values = (username, datetime.now(), success, job, message)
        cursor.execute(query, values)
        db.commit()
        cursor.close()
    def check_credentials(self):
        username = self.lineEdit.text()
        password = self.lineEdit_2.text()

    # Khởi tạo con trỏ cơ sở dữ liệu
        cursor = db.cursor()
    
    # Truy vấn MySQL để lấy username, pass và job từ bảng user và usertype
        query = """
        SELECT u.username, u.pass, ut.job
        FROM (user u JOIN usertype ut ON u.user_id = ut.user_id)
        WHERE u.username = %s AND u.pass = %s
        """
        values = (username, password)
        cursor.execute(query, values)
    
    # Kiểm tra kết quả
        result = cursor.fetchone()
        if result:
            db_username, db_password, job = result
        # So sánh giá trị username và password nhập vào với giá trị lấy từ cơ sở dữ liệu
            if username == db_username and password == db_password:
                if job == 'user':
                # Nếu là user, thực hiện các hành động tương ứng
                    print("Đăng nhập thành công với quyền user")
                    self.LoginButtonClickedUser()
                    self.log_login_attempt(username, True, job, "Đăng nhập thành công với quyền user")
                    return username
                elif job == 'admin':
                # Nếu là admin, thực hiện các hành động tương ứng
                    print("Đăng nhập thành công với quyền admin")
                    self.LoginButtonClickedAdmin()
                    self.log_login_attempt(username, True, job, "Đăng nhập thành công với quyền admin")
                    return username
                else:
                    print("Lỗi: Loại người dùng không hợp lệ")
                    self.log_login_attempt(username, False, job, "Loại người dùng không hợp lệ")
            else:
                print("Đăng nhập thất bại!")
                self.log_login_attempt(username, False, None, "Sai tên người dùng hoặc mật khẩu")
        else:
            print("Đăng nhập thất bại!")
            self.log_login_attempt(username, False, None, "Người dùng không tồn tại trong cơ sở dữ liệu")
    
        cursor.close()

        
    

    '''import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec())'''